
      SUBROUTINE PLT_READ_SIGNAL
     &          (lu_grd,
     &           file_id,prfl_id,
     &           xmtr_id,freq,tlat,tlon,tpwr,
     &           incl,headng,talt,ralt,
     &           mxpath,nrpath,bearing,rhomax,rxlat,rxlon,
     &           mxprm,nrprm,param,nrcmp,mxlat,nrlat,mxlon,nrlon,
     &           xlat1,xlon1,xlat2,xlon2,amp_grd,sig_grd,
     &           data_format)

c***********************************************************************

c Reads files generated by OPA_GRID

c***********************************************************************

c Parameters:

c     lu_grd        logical unit for grid data

c     file_id       file identification; 120 characters

c     prfl_id       ionospheric profile identification

c     xmtr_id       transmitter identification
c     freq          transmitter frequency; kHz
c     tlat          transmitter latitude
c     tlon          transmitter longitude
c     tpwr          transmitter power

c     incl          transmitter antenna inclination
c     headng        transmitter antenna heading
c     talt          transmitter altitude
c     ralt          receiver altitude; km

c     mxpath        maximum number of paths
c     nrpath                number of paths
c     bearing       bearings of paths
c     rhomax        ranges   of paths
c     rxlat         receiver latitudes
c     rxlon         receiver longitudes

c     mxprm         maximum number of PARAM's
c     nrprm                 number of PARAM's
c     param                 values of PARAM's

c     nrcmp         number of components

c     mxlon         maximum number of points in longitude
c     mxlat         maximum number of points in latitude
c     nrlon         output  number of points in longitude
c     nrlat         output  number of points in latitude

c     xlat1         lower bound of the op area; degrees N
c     xlon1         right bound of the op area; degrees W
c     xlat2         upper bound of the op area; degrees N
c     xlon2         left  bound of the op area; degrees W

c     amp_grd       grid of signal amplitudes
c     sig_grd       grid of signal standard deviations

c     data_format   'a' if data is in ASCII format
c                   'b' if data is in BINARY format
c                   'c' if data is in C-BINARY format

c***********************************************************************

c  Change history:

c     29 Jan 94     Added ASCII/BINARY option.

c     30 Jun 94     Dropped AREA_ID from argument list.

c     27 Oct 95     Changed to use lwpc_LUN.cmn to set logical units.

c     15 Aug 98     Added C-Binary format; improved error tests and
c                   messages.

c*******************!***************************************************

c     LWPC parameters
      include      'lwpc_cfg.cmn'
      include      'lwpc_lun.cmn'
      include      'grd_data.cmn'

      character*(*) data_format
      character*  8 archive,prgm_id
      character* 20 xmtr_id,path_id,areaidx
      character* 40 prfl_id
      character* 80 case_id
      character*120 file_id(3)
      character*200 error_msg
      logical       begin_file,end_file,no_matches
      integer       lu_grd,
     &              print_hdr/0/,
     &              print_grd/0/
      real          bearing(mxpath),rhomax(mxpath),
     &              rxlat(mxpath),rxlon(mxpath),
     &              amp_grd(mxlon,mxlat,2),sig_grd(mxlon,mxlat,2),
     &              param(mxprm),
     &              incl

      print_hdr=1
      print_grd=1

      if (data_format(1:1) .eq. 'C' .or.
     &    data_format(1:1) .eq. 'c') then

c        There is only one set of data in each C-Binary file
         call READ_C_GRD
     &       (lu_grd,
     &        print_hdr,print_grd,
     &        archive,file_id,prgm_id,
     &        case_id,prfl_id,
     &        xmtr_id,freq,tlat,tlon,
     &        path_id,oplat1,oplon1,oplat2,oplon2,
     &        nrpath,bearing,rhomax,rxlat,rxlon,
     &        nrprm,nrcmp,nrlwf,param,
     &        areaidx,xlat1x,xlon1x,xlat2x,xlon2x,
     &        nrlat,nrlon,
     &        amp_grd(1,1,1),sig_grd(1,1,1),
     &        begin_file,end_file)

         no_matches=.true.
         if (xlat1x .eq. xlat1 .and. xlon1x .eq. xlon1 .and.
     &       xlat2x .eq. xlat2 .and. xlon2x .eq. xlon2) then

c           A match has been found
            no_matches=.false.

            tpwr  =param( 1)
            dist  =param( 2)
            incl  =param( 3)
            headng=param( 4)
            talt  =param( 5)
            ralt  =param( 6)
         end if
         if (no_matches) then

c           No match was found
            write(lwpcLOG_lun,
     &          '(''ERROR [PLT_READ_SIGNAL]: End of file '',
     &            ''The input grid file contains no data which '',
     &            ''match the specified OP area'')')
            write(lwpcLOG_lun,
     &          '(''Requested parameters:'')')
            write(lwpcLOG_lun,
     &          '(a,1x,2f6.1,f7.1,2f6.1,2(f7.1,f8.1))')
     &            xmtr_id,freq,tlat,tlon,tpwr,talt,
     &            xlat1,xlon1,xlat2,xlon2
            write(lwpcLOG_lun,
     &          '(''xmtr_id,freq,tlat,tlon,tpwr,talt,'',
     &            ''xlat1,xlon1,xlat2,xlon2'')')
            write(lwpcLOG_lun,
     &          '(''Found parameters:'')')
            write(lwpcLOG_lun,
     &          '(''xmtr_id,freq,tlat,tlon,tpwr,talt,'',
     &            ''xlat1,xlon1,xlat2,xlon2'')')
            write(lwpcLOG_lun,
     &          '(a,1x,2f6.1,f7.1,2f6.1,2(f7.1,f8.1))')
     &            xmtr_id,freq,tlat,tlon,tpwr,talt,
     &            xlat1x,xlon1x,xlat2x,xlon2x
            write(error_msg,
     &          '(''ERROR [PLT_READ_NOISE]: '',
     &            ''The data requested was not found in '',
     &            ''the grid file.'')')
            call LWPC_ERROR ('ERROR',error_msg)
         end if
      else

         call READ_HDR
     &       (lu_grd,print_grd,
     &        archive,file_id,prgm_id,
     &        case_id,prfl_id,
     &        xmtr_id,freq,tlat,tlon,
     &        path_id,oplat1,oplon1,oplat2,oplon2,
     &        mxpath,nrpath,bearing,rhomax,rxlat,rxlon,
     &        begin_file,end_file,
     &        data_format)

         no_matches=.true.
         do while (no_matches .and. .not.end_file)

            call READ_GRD
     &          (lu_grd,print_grd,
     &           mxprm,nrprm,param,nrcmp,nrlwf,
     &           areaidx,xlat1x,xlon1x,xlat2x,xlon2x,
     &           mxlat,nrlat,mxlon,nrlon,
     &           amp_grd(1,1,1),sig_grd(1,1,1),
     &           begin_file,end_file,
     &           data_format)

            if (.not.end_file) then

               if (nrcmp .gt. 1) then

                  do ncmp=2,nrcmp

                     call READ_GRD
     &                   (lu_grd,print_grd,
     &                    mxprm,nrprm,param,nrcmp,nrlwf,
     &                    areaidx,xlat1x,xlon1x,xlat2x,xlon2x,
     &                    mxlat,nrlat,mxlon,nrlon,
     &                    amp_grd(1,1,ncmp),sig_grd(1,1,ncmp),
     &                    begin_file,end_file,
     &                    data_format)
                  end do
               end if
            end if

            if (xlat1x .eq. xlat1 .and. xlon1x .eq. xlon1 .and.
     &          xlat2x .eq. xlat2 .and. xlon2x .eq. xlon2) then

c              A match has been found
               no_matches=.false.

               tpwr  =param( 1)
               dist  =param( 2)
               incl  =param( 3)
               headng=param( 4)
               talt  =param( 5)
               ralt  =param( 6)
            end if
         end do

         if (no_matches) then

c           Error message
            write(lwpcLOG_lun,
     &          '(''ERROR [PLT_READ_SIGNAL]: End of file '',
     &            ''The input grid file contains no data which '',
     &            ''match the specified OP area'')')
            write(lwpcLOG_lun,
     &          '(''Requested parameters:'')')
            write(lwpcLOG_lun,
     &          '(a,1x,2f6.1,f7.1,2f6.1,2(f7.1,f8.1))')
     &            xmtr_id,freq,tlat,tlon,tpwr,talt,
     &            xlat1,xlon1,xlat2,xlon2
            write(lwpcLOG_lun,
     &          '(''xmtr_id,freq,tlat,tlon,tpwr,talt,'',
     &            ''xlat1,xlon1,xlat2,xlon2'')')
            write(lwpcLOG_lun,
     &          '(''Found parameters:'')')
            write(lwpcLOG_lun,
     &          '(''xmtr_id,freq,tlat,tlon,tpwr,talt,'',
     &            ''xlat1,xlon1,xlat2,xlon2'')')

            REWIND(lu_grd)

            call READ_HDR
     &          (lu_grd,print_grd,
     &           archive,file_id,prgm_id,
     &           case_id,prfl_id,
     &           xmtr_id,freq,tlat,tlon,
     &           path_id,oplat1,oplon1,oplat2,oplon2,
     &           mxpath,nrpath,bearing,rhomax,rxlat,rxlon,
     &           begin_file,end_file,
     &           data_format)

            do while (.not.end_file)

               call READ_GRD
     &             (lu_grd,print_grd,
     &              mxprm,nrprm,param,nrcmp,nrlwf,
     &              areaidx,xlat1x,xlon1x,xlat2x,xlon2x,
     &              mxlat,nrlat,mxlon,nrlon,
     &              amp_grd(1,1,1),sig_grd(1,1,1),
     &              begin_file,end_file,
     &              data_format)

               if (.not.end_file) then

                  if (nrcmp .gt. 1) then

                     do ncmp=2,nrcmp

                        call READ_GRD
     &                      (lu_grd,print_grd,
     &                       mxprm,nrprm,param,nrcmp,nrlwf,
     &                       areaidx,xlat1x,xlon1x,xlat2x,xlon2x,
     &                       mxlat,nrlat,mxlon,nrlon,
     &                       amp_grd(1,1,ncmp),sig_grd(1,1,ncmp),
     &                       begin_file,end_file,
     &                       data_format)
                     end do
                  end if

                  tpwr  =param( 1)
                  dist  =param( 2)
                  incl  =param( 3)
                  headng=param( 4)
                  talt  =param( 5)
                  ralt  =param( 6)
                  write(lwpcLOG_lun,
     &                '(a,1x,2f6.1,f7.1,2f6.1,2(f7.1,f8.1))')
     &                  xmtr_id,freq,tlat,tlon,tpwr,talt,
     &                  xlat1x,xlon1x,xlat2x,xlon2x
               end if
            end do

c           STOP execution
            write(error_msg,
     &          '(''ERROR [PLT_READ_SIGNAL]: End of file '',
     &            ''The input grid file contains no data which '',
     &            ''match the specified OP area'')')
            call LWPC_ERROR ('ERROR',error_msg)
         end if
      end if
      REWIND(lu_grd)
      RETURN
      END      ! PLT_READ_SIGNAL